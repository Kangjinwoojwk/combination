---
20190102 Summary
---

# 20190102 Summary

## 1. 지난 2주의 서머리

- 간단한 챗봇, 초콜라티를 통해 설치, 파이썬, 깃, 타이포라, vs코드, 크롬

- 파일 단위 실행, 모닝 퀴즈~런치이후에도~, 데이터 가져오기, 함수화 등
  <<<<<<< HEAD

- # 플라스크, 요청이 들어오면 응답을 한다. 

- 플라스크, 요청이 들어오면 응답을 한다.

> > > > > > > 4341ae751cd449f232c00f6cce47866b7180a3e6

- 자기소개, git자율학습

## 2.이번주

- 이번후, 다음주, 8일간....음....
- 스크래치
- 후에 코드 공유는 git lab으로 한다.
- 스크래치가 뭘 할 수 있는가? 간단히

## 3.오전 수업

- 주피터 노트북?
- 주로 있을 곳이 사용자-student
- `git clone https://github.com/eduyu/jupyter_notebooks.git`을 깃배쉬에 써서 복사 가능
- `rm -rf .git                                                                                                                         ` .git 폴더 삭제
- `jupyter notebook                                                                                                                    `쥬피터페이지 발현 서버가 돌고 있는 것이다. 컨+c로 종료가능
- 끄면 쥬피터 페이지 못 들어간다. 깃배쉬를 켜놓고 크롬에서 작업해보자!
- TIL에서 `echo '.ipynb_checkpoints/' >> .gitignore``git config --global core.autocrlf true `, 이상한 결과창 없애기 위함
- 쥬피터와 컴퓨터 폴더가 연동 중, 파이썬 파일을 만들면 ipynb파일 생성, 이름부터 지어주자
- 깃배쉬로 파이썬 돌리면 돌아가는데 저장이 안돼...notebook은 그래서 신세계, 녹색은 에딧모드, 파란색은 완결, 쓰로 run하면 다음 할거 치는 창이 나와 esc후(완결모드) 컨+enter하면 실행돼, 셀단위 실행, 앞쪽 코드 바꾸면 그것도 같이 바꿔줘야 한다. 파란색에서 'h'누르면 단축키 나와
- 'b'누르면 아래 하나 추가 엔터치면 바로 입력 가능, 컨+엔터치면 점점 수가 늘어나, 코드가 쌓이는 걸 보여 주는 것, 그렇다면 처음부터 하고 싶다면? 00누른 후 리스타트, 보이는 건 그대로지만 처음부터 실행 된다. 앞의 변수들 전부 초기화 각각이 다르게 움직인다
- 커널-리스타트 클리어 아웃풋 하면 리스타트와 동시에 아웃풋도 클리어 해준다.
- `pip install rise`` jupyter-nbextension install --py --sys-prefix                                 `
- 01_Python_intro 파일이 중요, 우리가 할 것들.... 공식 튜토리얼도 있고..PEP 8-코드 작성 가이드
- 연산자 앞뒤로 뜨는게 비효율이라는 생각 들어 가는 거 같은데 제공, 안도는거 아니지만 가능하면 지켜라
- import keyword
  print(keyword.kwlist) 이걸로 나오는 키워드는 못쓴다.
- 당연하지만 내장 함수와 같은 이름 쓰면 내장 함수를 쓰지 못하게 된다.
- 인코딩은 기본  UTF-8이다. #-\*- coding: utf-8 -\*- 이건 읽는다. \은 * 때문에 있는거 UTF로 설정된다.
- """은 docstring, print(ss3_coding.__doc__)하면 그 안에 주석을 읽어 준다. 개발자의 주석을 읽을 수 있다. print없이 주피터에서 돌리면 출력 되는데 \n이 나오는 걸로 출력된다.
- ;은 기본적으로 안쓰이는데 ;이 있으면 다른 줄인양 돌아간다. 한줄에 코드 쓸려고 할때 쓸 수 있다.

```python
a = 'longlongword'
if a == 'longlongword':
    print (a)
```

```python
a = 'longlongword'
if a \
== 'longlongword':
    print (a)
```

동일하다

## 4.오후 수업

- tab, 기본이 4칸, 얼마나 뛰는게 좋을까? 2칸 쓰는 사람도 있어, 잘보인다. 4칸? def 가 맞아서 보여 취향 따라 두칸이 편하다면 두칸 괜찮아
- 그동안의 수업, 안되는 것을 배움
- 메모리 id값, 계속 바뀐다. 새로 입력해도 바껴 많이 쓰는 숫자는 안 바껴, -5~256, 고정 주소, 

```python
a, b = 1, 2
a, b = b, a
print(a, b)
```

이게 된다

- int, 다른 언어에는 제약 범위 있지만 파이썬은 없어, 아무리 커도 그냥 들어가 파이썬3에서는 long없다. 오버플로우가 없다. 가장 큰걸로 곱해도 곱해짐, 의미없는 max
- 곱한거 어째선지 매우 작은 껀덕지가 붙는다 다양한 방법으로 타개하자
- 파이썬은 그냥 허수가 쓸 일 수 있다.
- 0, None,빈 리스트 들 뭐든 비어있으면 False 빈스트링도 False
- ''로 하면 그 사이에""가 있어도 그냥 문자일 뿐이다. 그안에 ''를 쓰고 싶다면 \를 사용하면 된다.
- print 문의 end='\t', 기본은 \n이다 \는 혼자 역할 못한다 뒤에랑 무조건 묶음
- [`f-strings`](https://www.python.org/dev/peps/pep-0498/) 은 3.6에서만 쓰인다 3.6이 아닌 곳도 있으니까 %-formatting나 `str.format()`를 주로쓰자
- 연산자, 연산자 우선순위
- 형변환, 기본적으로 더 큰형태로 전환
- 리스트, 크기제한 없다 백만개든 몇개든 들어가[], 0개 이상 넣을 수 있어
- 튜플은 리스트와 유사하지만()으로 묶이고 수정 불가, 읽는 거 밖에 못함, 직접 사용보다 파이썬 내부사용
- range같은거 없는 언어가 많아, 알고리즘 수업은 어떤 상황에도 같은 일 하는 코드 짜는걸 배우는 것, 이 수업은 파이썬을 얼마나 잘 쓰게 될 것인가?에 관한 수업
- set은 중복 없어, 리스트에서 중복 제거 하고 싶으면 셋트로 만들면 돼
- 빈 중괄호는 딕셔너리로 인식한다, 꺼낼때는 어쨌든 대괄호

#### 쥬피터를 공부해보자, 데이터사이언스에서 자주 다뤄 이걸로만 하기도
